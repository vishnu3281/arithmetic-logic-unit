module alu (
    input  [3:0] A,     // 4-bit input A
    input  [3:0] B,     // 4-bit input B
    input  [2:0] ALU_Sel, // 3-bit select signal
    output reg [3:0] ALU_Out, // 4-bit output
    output reg CarryOut        // Carry out flag for addition/subtraction
);

always @(*) begin
    case (ALU_Sel)
        3'b000: {CarryOut, ALU_Out} = A + B; // Addition
        3'b001: {CarryOut, ALU_Out} = A - B; // Subtraction
        3'b010: begin
            ALU_Out = A & B; // AND
            CarryOut = 0;
        end
        3'b011: begin
            ALU_Out = A | B; // OR
            CarryOut = 0;
        end
        3'b100: begin
            ALU_Out = ~A;    // NOT (A)
            CarryOut = 0;
        end
        default: begin
            ALU_Out = 4'b0000;
            CarryOut = 0;
        end
    endcase
end

endmodule
